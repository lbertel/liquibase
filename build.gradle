buildscript {
    ext {
        springBootVersion = '2.2.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'java-library'
    id 'org.springframework.boot' version '2.2.2.RELEASE'
}

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter:${springBootVersion}"
    implementation("org.springframework.boot:spring-boot-starter-jdbc:${springBootVersion}")
    implementation("org.liquibase:liquibase-core:3.8.2")
    runtimeOnly("mysql:mysql-connector-java:8.0.17")
    //need only for jdk 9 or above
    runtimeOnly('javax.xml.bind:jaxb-api:2.4.0-b180830.0359')
}

bootRun {}

// make sure bootRun is executed when runDev task runs
task runDev(dependsOn:bootRun) {
    gradle.taskGraph.whenReady { graph ->
        logger.lifecycle('>>> Setting spring.profiles.active to dev')
        if (graph.hasTask(runDev)) {
            bootRun {
                args = ["--spring.profiles.active=dev"]
            }
        }
    }
}

// make sure bootRun is executed when runTest task runs
task runTest(dependsOn:bootRun) {
    gradle.taskGraph.whenReady { graph ->
        logger.lifecycle('>>> Setting spring.profiles.active to test')
        if (graph.hasTask(runTest)) {
            bootRun {
                args = ["--spring.profiles.active=test"]
            }
        }
    }
}

// make sure bootRun is executed when runProd task runs
task runProd(dependsOn:bootRun) {
    gradle.taskGraph.whenReady { graph ->
        logger.lifecycle('>>> Setting spring.profiles.active to prod')
        if (graph.hasTask(runProd)) {
            bootRun {
                args = ["--spring.profiles.active=prod"]
            }
        }
    }
}
